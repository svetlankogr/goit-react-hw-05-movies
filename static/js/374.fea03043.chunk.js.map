{"version":3,"file":"static/js/374.fea03043.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Details/Details.module.css?cd8c","components/Details/Details.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"details\":\"Details_details__zhRZh\",\"img\":\"Details_img__ZUxBG\",\"info\":\"Details_info__9+4L+\"};","import PropTypes from 'prop-types';\nimport css from './Details.module.css';\n\nexport const Details = ({\n  originalTitle,\n  originalName,\n  overview,\n  year,\n  vote,\n  posterPath,\n  genres,\n}) => {\n  return (\n    <div className={css.details}>\n      <img\n        className={css.img}\n        src={\n          posterPath\n            ? `https://image.tmdb.org/t/p/w500${posterPath}`\n            : 'https://www.freeiconspng.com/thumbs/no-image-icon/no-image-icon-4.png'\n        }\n        alt={originalTitle ?? originalName}\n      />\n      <div className={css.info}>\n        <h2>\n          {originalTitle ?? originalName} ({year})\n        </h2>\n        <p>Vote: {vote}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Ganres</h3>\n        <p>{genres}</p>\n      </div>\n    </div>\n  );\n};\n\nDetails.propTypes = {\n  originalTitle: PropTypes.string,\n  originalName: PropTypes.string,\n  overview: PropTypes.string,\n  year: PropTypes.string,\n  vote: PropTypes.string,\n  posterPath: PropTypes.string,\n  genres: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"links\":\"MovieDetails_links__EzCWB\",\"additionalInfo\":\"MovieDetails_additionalInfo__4J0eA\",\"back\":\"MovieDetails_back__Jj+0O\",\"NavLink\":\"MovieDetails_NavLink__AG3Uu\",\"active\":\"MovieDetails_active__uPNdW\"};","import { useState, useEffect, Suspense } from 'react';\nimport {\n  useParams,\n  NavLink,\n  Link,\n  useLocation,\n  Outlet,\n} from 'react-router-dom';\nimport { getMovieById } from 'services/api';\nimport { Details } from 'components/Details/Details';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './MovieDetails.module.css';\nimport cn from 'classnames';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n\n  const { idMovie } = useParams();\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    getMovieById(idMovie).then(data => {\n      setMovie(data);\n    });\n  }, [idMovie]);\n  if (!movie) {\n    return;\n  }\n\n  const genres = getAllGenres(movie.genres);\n  function getAllGenres(array) {\n    const allGenres = [];\n    array.map(el => {\n      return allGenres.push(el.name);\n    });\n    return allGenres.join(', ');\n  }\n  const {\n    original_title,\n    original_name,\n    overview,\n    release_date,\n    vote_average,\n    poster_path,\n  } = movie;\n  const year = release_date.slice(0, 4);\n  const vote = vote_average.toFixed(2);\n  return (\n    <>\n      <Link className={css.back} to={location.state?.from ?? '/'}>\n        Go back\n      </Link>\n      <Details\n        originalTitle={original_title}\n        originalName={original_name}\n        overview={overview}\n        year={year}\n        vote={vote}\n        posterPath={poster_path}\n        genres={genres}\n      />\n      <h3 className={css.additionalInfo}>Additional information</h3>\n      <div className={css.links}>\n        <NavLink\n          className={({ isActive }) =>\n            cn(css.NavLink, { [css.active]: isActive })\n          }\n          to=\"cast\"\n        >\n          Cast\n        </NavLink>\n        <NavLink\n          className={({ isActive }) =>\n            cn(css.NavLink, { [css.active]: isActive })\n          }\n          to=\"reviews\"\n        >\n          Review\n        </NavLink>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '4d1fe51ed84bccfd5906e94a2d193282';\n\nconst filmsApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovie = async () => {\n  const { data } = await filmsApi.get('/trending/all/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\nexport const getMovieByQuery = async query => {\n  const { data } = await filmsApi.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await filmsApi.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await filmsApi.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await filmsApi.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport function fetchGenresList() {\n  return filmsApi.get('genre/movie/list?language=en-US');\n}\n"],"names":["Details","originalTitle","originalName","overview","year","vote","posterPath","genres","className","css","src","alt","location","useLocation","idMovie","useParams","useState","movie","setMovie","useEffect","getMovieById","then","data","array","allGenres","map","el","push","name","join","getAllGenres","original_title","original_name","release_date","vote_average","poster_path","slice","toFixed","to","state","from","isActive","cn","Suspense","fallback","Loader","filmsApi","axios","baseURL","params","api_key","getTrendingMovie","get","page","getMovieByQuery","query","id","getMovieReviews","getMovieCast"],"sourceRoot":""}