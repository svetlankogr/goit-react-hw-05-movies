{"version":3,"file":"static/js/727.04a69b81.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/SearchMovie/SearchMovie.module.css?c852","components/SearchMovie/SearchMovie.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie__item\":\"MovieItem_movie__item__nTjyc\",\"image\":\"MovieItem_image__wpzZX\",\"movie_text\":\"MovieItem_movie_text__A6pAI\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MovieItem.module.css';\n\nexport const MovieItem = ({ posterPath, originaTitle, originalName, id }) => {\n  const location = useLocation();\n  return (\n    <li className={css.movie__item} key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <h2 className={css.movie_text}>{originaTitle ?? originalName}</h2>\n        <img\n          src={\n            posterPath\n              ? `https://image.tmdb.org/t/p/w500${posterPath}`\n              : 'https://www.freeiconspng.com/thumbs/no-image-icon/no-image-icon-4.png'\n          }\n          alt={originaTitle ?? originalName}\n        />\n      </Link>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  posterPath: PropTypes.string,\n  originaTitle: PropTypes.string,\n  originalName: PropTypes.string,\n  id: PropTypes.number,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movie__list\":\"MovieList_movie__list__IZ1Q7\"};","import PropTypes from 'prop-types';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport css from './MovieList.module.css';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <ul className={css.movie__list}>\n      {movies.map(({ poster_path, original_title, original_name, id }) => {\n        return (\n          <MovieItem\n            key={id}\n            posterPath={poster_path}\n            originaTitle={original_title}\n            originalName={original_name}\n            id={id}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchMovie_searchForm__unPlp\",\"searchFormBtn\":\"SearchMovie_searchFormBtn__Tv9Fa\",\"searchFormBtnLabel\":\"SearchMovie_searchFormBtnLabel__MRHNf\",\"searchFormInput\":\"SearchMovie_searchFormInput__QVP8q\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'services/api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport css from './SearchMovie.module.css';\n\nexport const SearchMovie = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!movieName) return;\n\n    setSearchQuery(movieName);\n    getMovieByQuery(movieName).then(({ results }) => {\n      setMovies(results);\n    });\n  }, [movieName]);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: searchQuery });\n  };\n\n  return (\n    <>\n      <form className={css.searchForm} onSubmit={onFormSubmit}>\n        <input\n          className={css.searchFormInput}\n          name=\"name\"\n          placeholder=\"Search movie\"\n          type=\"text\"\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n        />\n        <button className={css.searchFormBtn} type=\"submit\">\n          <span className={css.searchFormBtnLabel}>Search</span>\n        </button>\n      </form>\n      <MovieList movies={movies} />\n    </>\n  );\n};\n","import { SearchMovie } from 'components/SearchMovie/SearchMovie';\n\nconst Movies = () => {\n  return <SearchMovie />;\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '4d1fe51ed84bccfd5906e94a2d193282';\n\nconst filmsApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovie = async () => {\n  const { data } = await filmsApi.get('/trending/all/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\nexport const getMovieByQuery = async query => {\n  const { data } = await filmsApi.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await filmsApi.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await filmsApi.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await filmsApi.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport function fetchGenresList() {\n  return filmsApi.get('genre/movie/list?language=en-US');\n}\n"],"names":["MovieItem","posterPath","originaTitle","originalName","id","location","useLocation","className","css","to","state","from","src","alt","MovieList","movies","map","poster_path","original_title","original_name","SearchMovie","useState","setMovies","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","getMovieByQuery","then","results","onSubmit","e","preventDefault","query","name","placeholder","type","value","onChange","target","filmsApi","axios","baseURL","params","api_key","getTrendingMovie","page","data","getMovieById","getMovieReviews","getMovieCast"],"sourceRoot":""}